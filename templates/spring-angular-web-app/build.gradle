buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorPluginVersion}")
    }
}

defaultTasks 'clean', 'build', 'check'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.asciidoctor.convert'

apply from: "$rootDir/gradle/repositories.gradle"
apply from: "$rootDir/gradle/spring-boot.gradle"
apply from: "$rootDir/gradle/groovy.gradle"
apply from: "$rootDir/gradle/spock.gradle"
apply from: "$rootDir/gradle/cucumber-jvm.gradle"
apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/codenarc.gradle"
apply from: "$rootDir/gradle/version.gradle"
apply from: "$rootDir/gradle/testing.gradle"
apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/maven-publish.gradle"
apply from: "$rootDir/gradle/build-dashboard.gradle"
apply from: "$rootDir/gradle/other.gradle"
apply from: "$rootDir/gradle/docker.gradle"


if ('true' == runIntegrationTests) {
    defaultTasks += ['outboundIntegrationTests', 'inboundIntegrationTests', 'acceptanceTests']
}


/*if ('master' == branch) {
    defaultTasks += ['publishToMavenLocal']
}*/

if('true' == buildDockerImage) {
    defaultTasks <<  'buildDockerImage'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

