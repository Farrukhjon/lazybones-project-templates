/*
 * Copyright (c) 2015. Farrukhjon D. Sattorov firedandy@gmail.com.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.farrukh.examples.rest

import java.security.SecureRandom

/**
 * The randomizer for exercising co-called the "monkey testing".
 * The Monkey testing is a software testing technique in which the testing is performed on the system under test randomly.
 * The Input data that is used to test also generated randomly and keyed into the system.
 */
class Randomizer {

    /**
     * Provides secure random generator.
     */
    def random = new SecureRandom()

    /**
     * Generates a random integer from 0 up to, but not inclusive, of the specified max number.
     * @param maxNumber top of the number range.
     * @return the generated number.
     */
    int randomNumberExclusive(final int maxNumber) {
        random.nextInt(maxNumber)
    }

    /**
     * Generates random byte array.
     * @param size the size of the array.
     * @return the generated byte array.
     */
    byte[] randomBytes(final int size) {
        def bytes = new byte[size]
        random.nextBytes(bytes)
        bytes
    }

    /**
     * Generates random uuid.
     * @return the generated uuid.
     */
    UUID randomUUID() {
        UUID.randomUUID()
    }

    /**
     * Selects a pseudo-random enum value from the provided enum class.
     * @param clazz the enum class to select a value from.
     * @return the randomly selected enum value.
     */
    def <T extends Enum<T>> T randomEnum(Class<T> clazz) {
        clazz.enumConstants[randomNumberExclusive(clazz.enumConstants.length)]
    }

}
